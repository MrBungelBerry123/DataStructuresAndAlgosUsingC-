Sorting problem:
Input: A sequence of n numbers.{a1, a2, ..., an}
Output: A permutation {a1', a2', ..., an'} such that a1' <= a2' <= ... <= an'.

swap(a, b, A)
0 - temp = A[a]      // k1
1 - A[a] = A[b]      // k2
2 - A[b] = temp      // k3


SelectionSort(A)
0 - i = 1								// c1
1 - for i upto A.length - 1             // c2  N 
2 - 	min = i                         // c3  N - 1
3 - 	j = i + 1                       // c4  N - 1
4 - 	for j upto A.length             // c5  N(N - 1)/2 
5 - 		if A[j] < A[min]            // c6  N(N - 1)/2 
			then min = j                                  
6 - 	swap(i, min, A)					// c7  N - 1         

T(N) = c1 + c2N + (N - 1)(c3 + c4 + c8) + N(N - 1)(c5 + c6)/2

O(n^2)      